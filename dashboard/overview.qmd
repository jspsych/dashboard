---
format: 
    dashboard:
        scrolling: true
---

# 30d

## Row 

```{python}
import htmltools
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import sys
import os
project_root = os.path.abspath(os.path.join(os.getcwd(), '..'))
if project_root not in sys.path:
    sys.path.insert(0, project_root)

# Now you can import your modules
from src.metrics_calculator import MetricsCalculator


calculator_30d = MetricsCalculator(db_path="../data/analytics.db", days=30)
calculator_60d = MetricsCalculator(db_path="../data/analytics.db", days=60)
calculator_90d = MetricsCalculator(db_path="../data/analytics.db", days=90)
calculator_all = MetricsCalculator(db_path="../data/analytics.db", days=None) 

```


::: {.valuebox icon="sign-merge-right-fill" color="vb-primary" title="Merge Rate"}

`{python} float("{:.2f}".format(calculator_all.get_merge_rate()))`

```{python} 
htmltools.HTML(f"<span>{calculator_all.get_merged_count()} of {calculator_all.get_total_pull_requests()} PRs merged</span>") 
```

:::

::: {.valuebox icon="check" color="vb-primary" title="Average Issue Resolution"}

`{python} 11`

```{python} 
htmltools.HTML("<span>43 issues resolved</span>") 
```

:::

::: {.valuebox icon="circle" color="vb-primary" title="Active Items"}

`{python} 50`

```{python} 
htmltools.HTML("<span>25 issues, 25 PRs</span>") 
```

:::

::: {.valuebox icon="people" color="vb-primary" title="Community Engagement"}

`{python} 50`

```{python} 
htmltools.HTML("<span>Unique Contributors</span>") 
```

:::

## Row


::: {.card}

```{python} 
htmltools.HTML("<span class=\"card-title d-flex align-items-center\"> <i class=\"bi bi-save2\"> </i> <span class=\"ms-2\"> Release Timeline</span> </span>")
```
```{python} 
dates = pd.to_datetime([
    '2024-07-25', '2024-06-25', '2024-05-25', '2024-04-25',
    '2024-03-25', '2024-02-25', '2024-01-25', '2023-12-24',
    '2023-11-24', '2023-10-24', '2023-09-24', '2023-08-24'
])
dates = dates.sort_values()
bar_values = np.array([5, 5, 12, 6, 5, 14, 5, 5, 9, 13, 7, 19])

bar_values = bar_values[np.argsort(np.array([
    pd.to_datetime('2024-07-25'), pd.to_datetime('2024-06-25'), pd.to_datetime('2024-05-25'), pd.to_datetime('2024-04-25'),
    pd.to_datetime('2024-03-25'), pd.to_datetime('2024-02-25'), pd.to_datetime('2024-01-25'), pd.to_datetime('2023-12-24'),
    pd.to_datetime('2023-11-24'), pd.to_datetime('2023-10-24'), pd.to_datetime('2023-09-24'), pd.to_datetime('2023-08-24')
])).argsort()]

point_values = np.array([18, 19, 19.5, 18.5, 19.2, 19, 18.8, 19, 18.3, 18, 18.2, 18.5])
scaled_point_values = point_values * 2
df = pd.DataFrame({'date': dates, 'bars': bar_values, 'points': point_values, 'scaled_points': scaled_point_values})
df = df.sort_values('date').reset_index(drop=True)

fig, ax1 = plt.subplots(figsize=(18, 6)) 

ax1.bar(df['date'], df['bars'], color='lightgray', width=20, edgecolor='white', linewidth=0.5)
_ = ax1.set_ylabel('') # assign to dummy so that we supress the output to the terminal
ax1.tick_params(axis='y', labelsize=12) 
ax1.set_ylim(0, 20) 

ax2 = ax1.twinx()
ax2.plot(df['date'], df['scaled_points'], 'o', color='black', markersize=10) 
_ = ax2.set_ylabel('') # assign to dummy to supress the output
ax2.tick_params(axis='y', labelsize=12) 
ax2.set_ylim(0, 40) 

ax1.set_xticks(df['date']) 
_ = ax1.set_xticklabels([d.strftime('%b %y') for d in df['date']], rotation=0, ha='center', fontsize=12) 
ax1.tick_params(axis='x', length=0) 


ax1.grid(axis='y', linestyle=':', alpha=0.7) 
ax1.grid(axis='x', linestyle=':', alpha=0.7) 


ax1.spines['top'].set_visible(False)
ax1.spines['right'].set_visible(False)
ax2.spines['top'].set_visible(False)
ax2.spines['left'].set_visible(False)

fig.tight_layout()

plt.show()
```

:::

## Row

::: {.card}
```{python} 
htmltools.HTML("<span class=\"card-title d-flex align-items-center\"> <i class=\"bi bi-pie-chart\"> </i> <span class=\"ms-2\"> Work Type Distribution</span> </span>")
```

Features vs maintenance vs bugs

```{python}

```

:::

::: {.card}
```{python} 
import htmltools
htmltools.HTML("<span class=\"card-title d-flex align-items-center\"> <i class=\"bi bi-code-slash\"> </i> <span class=\"ms-2\"> Code Churn Trends</span> </span>")
```

Lines added/deleted over time

```{python}

```

:::

## Row

# 60d

# 90d

# All