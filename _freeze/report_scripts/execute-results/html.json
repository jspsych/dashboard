{
  "hash": "fb496e11698a362eb5c3dfa6c8944628",
  "result": {
    "engine": "jupyter",
    "markdown": "---\nformat:\n  html:\n    code-fold: true\njupyter: python3\n---\n\n\nFUNCTIONS: DATAFRAMES\n\n\nFUNCTIONS: PLOTS\n\n::: {#3a40c0dd .cell execution_count=2}\n``` {.python .cell-code}\ndef plot_quarterly_metrics(metrics, target_metric):\n  plt.figure(figsize=(10, 6))\n  for year in metrics.index.get_level_values('year').unique():\n    year_data = metrics.loc[year]\n    plt.plot(year_data.index, year_data[target_metric],\n            marker='o', label=f'Year {year}')\n\n  plt.xlabel('Quarter')\n  plt.ylabel(target_metric)\n  plt.title(f'Quarterly {target_metric} Over Time')\n  plt.legend()\n  plt.grid(True)\n  plt.show()\n\ndef plot_performance_comparison(metrics, target_metric):\n  plt.figure(figsize=(10, 6))\n  x = ['Current Quarter','This Quarter Last Year','Previous Quarter']\n  year = metrics.index.get_level_values('year')[-1]\n  quarter = metrics.index.get_level_values('quarter')[-1]\n  if quarter == 1:\n    prev_quarter = metrics.loc[year-1].loc[4][target_metric]\n  else:\n    prev_quarter = metrics.loc[year].loc[quarter-1][target_metric]\n  y = [\n    metrics.loc[year].loc[quarter][target_metric], \n    metrics.loc[year-1].loc[quarter][target_metric],\n    prev_quarter\n  ]\n  plt.bar(x, y)\n  plt.ylabel(target_metric)\n  plt.title(f'Performance Comparison for {target_metric}')\n  plt.show()\n```\n:::\n\n\nCACHES\n\n\nDATAFRAMES\n\n\nREPORT PAGES\n\n::: {#a0afc428 .cell execution_count=5}\n``` {.python .cell-code}\nissue_data = my_issues_quarterly\npull_data = my_prs_quarterly\n```\n:::\n\n\n",
    "supporting": [
      "report_scripts_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}